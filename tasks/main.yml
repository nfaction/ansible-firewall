---
###################
# Gather OS Facts #
###################
- name: gather os specific variables
  include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml"
    - "{{ ansible_distribution }}.yml"
    - "{{ ansible_os_family }}.yml"
    - "default.yml"
  tags:
    - fw-ports
    - fw-ranged-ports
    - ufw-complex-rules
    - ufw-apps
    - firewalld-services

#########################
# Configuration Profile #
#########################
- name: include firewall profile
  include_vars: "{{ firewall_profile }}.yml"
  tags:
    - fw-ports
    - fw-ranged-ports
    - ufw-complex-rules
    - ufw-apps
    - firewalld-services

##############################
# Install Specified Firewall #
##############################
- name: perform an apt update
  apt:
    update_cache: yes
    cache_valid_time: 3600
  when:
    - ansible_os_family == 'Debian'

- name: remove conflicting firewall packages
  package:
    name: "{{ item }}"
    state: absent
    use: "{{ package_mgr_to_use }}"
  with_items:
    - "{{ firewall_packages_to_remove | default([]) }}"

- name: install firewall pacakges
  package:
    name: "{{ item }}"
    state: present
    use: "{{ package_mgr_to_use }}"
  with_items:
    - "{{ firewall_packages_to_install | default([]) }}"

#################
# Configure UFW #
#################
- name: configure ufw
  block:
    - name: ensure ufw is running
      service:
        name: ufw
        state: started
        enabled: true

    - name: configure fw ports
      ufw:
        port: "{{ item.port }}"
        proto: "{{ item.proto }}"
        rule: "{{ item.rule }}"
      with_items:
        - "{{ fw_ports }}"
      tags:
        - fw-ports

    - name: configure fw ports from subnets
      ufw:
        port: "{{ item.0.port }}"
        proto: "{{ item.0.proto }}"
        rule: "{{ item.0.rule }}"
        from_ip: "{{ item.1 }}"
      with_subelements:
        - "{{ fw_ports_from_subnet }}"
        - from_subnet
      tags:
        - fw-ports

    - name: configure ranged fw ports
      ufw:
        port: "{{ item.from_ranged_port }}:{{ item.to_ranged_port }}"
        proto: "{{ item.proto }}"
        rule: "{{ item.rule }}"
      with_items:
        - "{{ fw_ranged_ports }}"
      tags:
        - fw-ranged-ports

    - name: configure ranged fw ports from subnets
      ufw:
        port: "{{ item.0.from_ranged_port }}:{{ item.0.to_ranged_port }}"
        proto: "{{ item.0.proto }}"
        rule: "{{ item.0.rule }}"
        from_ip: "{{ item.1 }}"
      with_subelements:
        - "{{ fw_ranged_ports_from_subnet }}"
        - from_subnet
      tags:
        - fw-ranged-ports

    - name: configure ufw app templates
      template:
        src: ufw_app.j2
        dest: "/etc/ufw/applications.d/{{ item.file }}"
        owner: "{{ item.owner | default('root') }}"
        group: "{{ item.group | default('root') }}"
        mode: "{{ item.mode | default('0644') }}"
      with_items:
        - "{{ ufw_apps }}"
      tags:
        - ufw-apps

    - name: configure ufw app profiles
      ufw:
        name: "{{ item.app_name }}"
        rule: "{{ item.rule }}"
        delete: "{{ item.delete | default(omit) }}"
      with_items:
        - "{{ ufw_apps }}"
      tags:
        - ufw-apps

    - name: configure complex ufw rules
      ufw:
        comment: "{{ item.comment | default(omit) }}"
        default: "{{ item.default | default(omit) }}"
        delete: "{{ item.delete | default(omit) }}"
        direction: "{{ item.direction | default(omit) }}"
        from_ip: "{{ item | default(omit) }}"
        from_port: "{{ item.from_port | default(omit) }}"
        insert: "{{ item.insert | default(omit) }}"
        insert_relative_to: "{{ item.insert_relative_to | default(omit) }}"
        interface: "{{ item.interface | default(omit) }}"
        log: "{{ item.log | default(omit) }}"
        logging: "{{ item.logging | default(omit) }}"
        name: "{{ item.rule_name | default(omit) }}"
        proto: "{{ item.proto | default(omit) }}"
        route: "{{ item.route | default(omit) }}"
        rule: "{{ item.rule | default(omit) }}"
        state: "{{ item.state | default(omit) }}"
        to_ip: "{{ item.to_ip | default(omit) }}"
        to_port: "{{ item.to_port | default(omit) }}"
      with_items:
        - "{{ ufw_complex_rules }}"
      tags:
        - ufw-complex-rules

    - name: allow all from networks to this host
      ufw:
        rule: allow
        src: "{{ item }}"
      with_items:
        - "{{ fw_subnets }}"
      when:
        - allow_subnets_to_host | bool

    - name: deny all and allow some
      ufw:
        state: enabled
        policy: "{{ fw_default_policy }}"

    - name: Set logging
      ufw:
        logging: "{{ ufw_logging_setting }}"
  when:
    - firewall_profile == "ufw"

#######################
# Configure FirewallD #
#######################
- name: configure firewalld
  block:
    - name: ensure firewalld is running
      service:
        name: firewalld
        state: started
        enabled: true

    - name: configure fw ports
      firewalld:
        port: "{{ item.port }}/{{ item.proto }}"
        permanent: "{{ item.permanent | default('true') }}"
        zone: "{{ item.zone | default('public') }}"
        state: "{{ item.state }}"
      with_items:
        - "{{ fw_ports }}"
      notify:
        - reload firewalld
      tags:
        - fw-ports

    - name: configure fw ports from subnets
      firewalld:
        port: "{{ item.0.port }}/{{ item.0.proto }}"
        permanent: "{{ item.0.permanent | default('true') }}"
        zone: "{{ item.0.zone | default('public') }}"
        source: "{{ item.1 }}"
        state: "{{ item.0.state }}"
      with_subelements:
        - "{{ fw_ports_from_subnet }}"
        - from_subnet
      notify:
        - reload firewalld
      tags:
        - fw-ports

    - name: configure ranged fw ports
      firewalld:
        port: "{{ item.from_ranged_port }}-{{ item.to_ranged_port }}/{{ item.proto }}"
        permanent: "{{ item.permanent | default('true') }}"
        zone: "{{ item.zone | default('public') }}"
        state: "{{ item.state }}"
      with_items:
        - "{{ fw_ranged_ports }}"
      notify:
        - reload firewalld
      tags:
        - fw-ranged-ports

    - name: configure ranged fw ports from subnets
      firewalld:
        port: "{{ item.0.from_ranged_port }}-{{ item.0.to_ranged_port }}/{{ item.0.proto }}"
        permanent: "{{ item.0.permanent | default('true') }}"
        zone: "{{ item.0.zone | default('public') }}"
        source: "{{ item.1 }}"
        state: "{{ item.0.state }}"
      with_subelements:
        - "{{ fw_ranged_ports_from_subnet }}"
        - from_subnet
      notify:
        - reload firewalld
      tags:
        - fw-ranged-ports

    - name: configure firewalld service templates
      template:
        src: firewalld_service.xml.j2
        dest: "{{ firewalld_services_path }}/{{ item.file }}"
        owner: "{{ item.owner | default('root') }}"
        group: "{{ item.group | default('root') }}"
        mode: "{{ item.mode | default('0644') }}"
      with_items:
        - "{{ firewalld_services }}"
      notify:
        - reload firewalld
      tags:
        - firewalld-services

    # Default list can be found by running: firewall-cmd --get-services
    - name: configure firewalld services
      firewalld:
        service: "{{ item.service }}"
        permanent: "{{ item.permanent | default(true) }}"
        zone: "{{ item.zone | default('public') }}"
        state: "{{ item.state | default('enabled') }}"
      with_items:
        - "{{ firewalld_services }}"
      notify:
        - reload firewalld
      tags:
        - firewalld-services

    - name: configure complex firewalld rules
      firewalld:
        icmp_block: "{{ item.icmp_block | default(omit) }}"
        icmp_block_inversion: "{{ item.icmp_block_inversion | default(omit) }}"
        immediate: "{{ item.immediate | default(omit) }}"
        interface: "{{ item.interface | default(omit) }}"
        masquerade: "{{ item.masquerade | default(omit) }}"
        offline: "{{ item.offline | default(omit) }}"
        permanent: "{{ item.permanent | default(omit) }}"
        port: "{{ item.port | default(omit) }}"
        rich_rule: "{{ item.rich_rule | default(omit) }}"
        service: "{{ item.service | default(omit) }}"
        source: "{{ item.source | default(omit) }}"
        state: "{{ item.state | default(omit) }}"
        timeout: "{{ item.timeout | default(omit) }}"
        zone: "{{ item.zone | default(omit) }}"
      with_items:
        - "{{ firewalld_complex_rules }}"
      notify:
        - reload firewalld
      tags:
        - firewalld-complex-rules
  when:
    - firewall_profile == "firewalld"
