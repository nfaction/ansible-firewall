---

- name: configure ufw
  block:
    - name: install ufw
      package:
        name: ufw
        state: present

    - name: ensure ufw is running
      service:
        name: ufw
        state: started
        enabled: true

    - name: configure ufw rules
      ufw:
        comment: "{{ item.0.comment | default(omit) }}"
        default: "{{ item.0.default | default(omit) }}"
        delete: "{{ item.0.delete | default(omit) }}"
        direction: "{{ item.0.direction | default(omit) }}"
        from_ip: "{{ item.1 | default(omit) }}"
        from_port: "{{ item.0.from_port | default(omit) }}"
        insert: "{{ item.0.insert | default(omit) }}"
        insert_relative_to: "{{ item.0.insert_relative_to | default(omit) }}"
        interface: "{{ item.0.interface | default(omit) }}"
        log: "{{ item.0.log | default(omit) }}"
        logging: "{{ item.0.logging | default(omit) }}"
        name: "{{ item.0.rule_name | default(omit) }}"
        proto: "{{ item.0.proto | default(omit) }}"
        route: "{{ item.0.route | default(omit) }}"
        rule: "{{ item.0.rule | default(omit) }}"
        state: "{{ item.0.state | default(omit) }}"
        to_ip: "{{ item.0.to_ip | default(omit) }}"
        to_port: "{{ item.0.to_port | default(omit) }}"
      with_subelements:
        - "{{ fw_ports }}"
        - from_ip

    - name: deny all and allow some
      ufw:
        state: enabled
        policy: deny

    - name: Set logging
      ufw:
        logging: true

    - name: verify state
      shell: '{{ item }}'
      register: fw_state
      changed_when: false
      with_items:
        - "ufw status verbose"
      tags:
        - verify

    - name: display output
      debug:
        msg: '{{ item.stdout_lines }}'
        verbosity: 4
      with_items: '{{ fw_state.results }}'
      tags:
        - verify
  when:
    - ansible_os_family == "Debian"

- name: configure firewalld
  block:
    - name: install dependencies
      package:
        name: python-firewall
        state: present

    - name: ensure firewalld is running
      service:
        name: firewalld
        state: started
        enabled: true

    - name: enable tcp ports
      firewalld:
        port: '{{ item }}/tcp'
        permanent: true
        state: enabled
      with_items: '{{ FW_PORTS.TCP }}'
      when: FW_PORTS.TCP is defined

    - name: enable udp ports
      firewalld:
        port: '{{ item }}/udp'
        permanent: true
        state: enabled
      with_items: '{{ FW_PORTS.UDP }}'
      when: FW_PORTS.UDP is defined

    - name: enable services
      firewalld:
        service: '{{ item }}'
        permanent: true
        state: enabled
      with_items: '{{ FW_PORTS.SERVICES }}'
      when: FW_PORTS.SERVICES is defined

    - name: enable subnet access
      firewalld:
        source: '{{ item }}'
        permanent: true
        state: enabled
      with_items: '{{ FW_PORTS.SUBNETS }}'
      when: FW_PORTS.SUBNETS is defined

    - name: verify state
      shell: '{{ item }}'
      register: fw_state
      changed_when: false
      with_items:
        - firewall-cmd --list-ports --zone=public
        - firewall-cmd --list-services --zone=public
      tags:
        - verify

    - name: display output
      debug:
        msg: '{{ item.stdout_lines }}'
        verbosity: 4
      with_items: '{{ fw_state.results }}'
      tags:
        - verify
  when:
    - ansible_os_family == "RedHat"
